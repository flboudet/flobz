###################################
# Choose your platform            #
###################################

# Platform type, leave blank to autodetect
PLATFORM=

# Support for mac multiple architecture (PowerPC/i386)
ENABLE_FAT?=true

# Select distro
data-packages="reduced.001"

###################################
# Configure your application      #
###################################

ENABLE_AUDIO?=true
DISABLE_NETWORK?=false
ENABLE_OPENGL?=false
ENABLE_TTF?=true
ENABLE_DGA?=false

DEBUG_MODE?=false
MORE_DEBUG?=false
ENABLE_PCH?=false

ENABLE_BENCHMARKS?=false

# Src settings
IOSFC_DIR=iosfc
GAMETOOLS_DIR=gametools
GOOMSL_DIR=goomsl

# Unix/Linux settings
PREFIX=/usr/local
DATADIR=$(PREFIX)/share/games/flobopuyo
INSTALL_BINDIR=$(DESTDIR)/$(PREFIX)/games
INSTALL_DATADIR=$(DESTDIR)/$(DATADIR)

# Mac settings
macimage_name=flobopuyo-mac-$(VERSION)
bundle_name=FloboPuyo.app
SYSTEM_ROOT=/Developer/SDKs/MacOSX10.4u.sdk
FRAMEWORKS_DIR=$(SYSTEM_ROOT)/Library/Frameworks

# Win32 settings
CYGWIN_VERSION=CYGWIN_NT-5.1
WINZIP_NAME=flobopuyo-win32-$(VERSION)
WINSDLINCLUDE=$(HOME)/SDL-1.2.12/include
WINSDLDEVLIBS=$(HOME)/SDL-1.2.12/lib
CROSSTOOLS=$(HOME)/mingw/bin
CROSSTRIPLET=i386-mingw32
#
##########


###################################
# Don't touch below               #
###################################


##############
# GLOBAL

# Platform Autodetection
ifndef PLATFORM
PLATFORM=$(shell uname -s)
endif

# Tools
ifeq ($(PLATFORM), crossmingw32)
  	CC=$(CROSSTOOLS)/$(CROSSTRIPLET)-gcc
  	CXX=$(CROSSTOOLS)/$(CROSSTRIPLET)-g++
	RANLIB=$(CROSSTOOLS)/$(CROSSTRIPLET)-ranlib
  	STRIP=$(CROSSTOOLS)/$(CROSSTRIPLET)-strip
	AR=$(CROSSTOOLS)/$(CROSSTRIPLET)-ar
  	PRGNAME=flobopuyo.exe
	ENABLE_OPENGL=false
else
	CC=gcc
	CXX=g++
	STRIP=strip
	PRGNAME=flobopuyo
endif

# Version
VERSION=$(shell date "+%Y%m%d")
CFLAGS:=$(CFLAGS) -DFLOBOPUYOVERSION=$(VERSION)

# Audio
ifeq ($(ENABLE_BENCHMARKS), true)
CFLAGS:=$(CFLAGS) -DBENCHMARKS=1
endif

# Audio
ifeq ($(ENABLE_AUDIO), true)
CFLAGS:=$(CFLAGS) -DUSE_AUDIO=1
endif

# Network
ifeq ($(DISABLE_NETWORK), true)
    CFLAGS:=$(CFLAGS) -DDISABLE_NETWORK=1
endif

# OpenGL
ifeq ($(ENABLE_OPENGL), true)
	CFLAGS:=$(CFLAGS) -DHAVE_OPENGL=1
	OBJFILES:=$(OBJFILES) glSDL.o
	ifeq ($(PLATFORM), Darwin)
		CFLAGS:=$(CFLAGS)
		LDFLAGS:=$(LDFLAGS) -framework OpenGL
	else
		LDFLAGS:=$(LDFLAGS) -lGL
	endif
endif

# Debug
ifeq ($(DEBUG_MODE), true)
	CFLAGS:=$(CFLAGS) -g -O0 -Winvalid-pch
	LDFLAGS:=$(LDFLAGS) -g
else
	CFLAGS:=$(CFLAGS) -O3 -fomit-frame-pointer
endif

# More Debug
ifeq ($(MORE_DEBUG), true)
	CFLAGS:=$(CFLAGS) -DDEBUG=1
endif


# SDL CONFIG
ifeq ($(PLATFORM), Darwin)
	OBJFILES:=$(OBJFILES) SDLMain.o
	CFLAGS:=$(CFLAGS) -I$(FRAMEWORKS_DIR)/SDL.framework/Headers -I$(FRAMEWORKS_DIR)/SDL_image.framework/Headers -I$(FRAMEWORKS_DIR)/SDL_mixer.framework/Headers
	LDFLAGS:=$(LDFLAGS) -framework SDL -framework SDL_image -framework SDL_mixer -framework Cocoa
# True Type Fonts for Mac OS X
ifeq ($(ENABLE_TTF), true)
	CFLAGS:=$(CFLAGS) -I$(FRAMEWORKS_DIR)/SDL_ttf.framework/Headers -DENABLE_TTF=1
	LDFLAGS:=$(LDFLAGS) -framework SDL_ttf
endif
else
ifeq ($(PLATFORM), $(CYGWIN_VERSION))
  	LDFLAGS:=$(LDFLAGS) -L$(WINSDLDEVLIBS) -lmingw32 -ljpeg -lzlib1 -lpng12-0 -ltiff-3 -lSDL_image -lSDL_mixer -lSDLmain -lSDL
ifeq ($(ENABLE_TTF), true)
        CFLAGS:=$(CFLAGS) -DENABLE_TTF=1
        LDFLAGS:=$(LDFLAGS) -lSDL_ttf
endif
else

ifeq ($(PLATFORM), crossmingw32)
  	LDFLAGS:=$(LDFLAGS) -L$(WINSDLDEVLIBS) -lmingw32 -ljpeg -lzlib1 -lpng12-0 -ltiff-3 -lSDL_image -lSDL_mixer -lSDLmain -lws2_32 -lSDL
ifeq ($(ENABLE_TTF), true)
        CFLAGS:=$(CFLAGS) -DENABLE_TTF=1
        LDFLAGS:=$(LDFLAGS) -lSDL_ttf
endif
else
	SDL_CONFIG=sdl-config
	CFLAGS:=$(CFLAGS) `$(SDL_CONFIG) --cflags`
	LDFLAGS:=$(LDFLAGS) `$(SDL_CONFIG) --libs` -lSDL_mixer -lSDL_image
# True Type Fonts for Unix/Linux
ifeq ($(ENABLE_TTF), true)
	CFLAGS:=$(CFLAGS) -DENABLE_TTF=1
	LDFLAGS:=$(LDFLAGS) -lSDL_ttf
endif
endif
endif
endif

# DGA for Linux
ifeq ($(PLATFORM), Linux)
	ifeq ($(ENABLE_DGA), true)
		CFLAGS:=$(CFLAGS) -DUSE_DGA=1
	endif
endif

##############
# CFLAGS

# Base
CFLAGS:=$(CFLAGS) -I$(ROOT_DIR) -I$(ROOT_DIR)/${GAMETOOLS_DIR} -I$(ROOT_DIR)/${IOSFC_DIR} -I$(ROOT_DIR)/${GOOMSL_DIR}

# Platform specific
ifeq ($(PLATFORM), $(CYGWIN_VERSION))
	CFLAGS:=$(CFLAGS) -mno-cygwin -mwindows -DWIN32 -DYY_NEVER_INTERACTIVE=1 -I$(WINSDLINCLUDE)
endif

ifeq ($(PLATFORM), crossmingw32)
  	CFLAGS:=$(CFLAGS) -mno-cygwin -mwindows -DWIN32 -DYY_NEVER_INTERACTIVE=1 -I$(WINSDLINCLUDE)  -I$(WINSDLINCLUDE)/SDL
endif

ifeq ($(PLATFORM), Darwin)
	CFLAGS:=$(CFLAGS) -DMACOSX -pipe -mmacosx-version-min=10.2
else
	CFLAGS:=$(CFLAGS) -DDATADIR=\"${DATADIR}\"
endif


# PCH
CFLAGS_NOPCH:=$(CFLAGS)
ifeq ($(ENABLE_PCH), true)
	CFLAGS:=$(CFLAGS) -include all.h
endif

DEPFLAGS:=${CFLAGS}

# FAT Binaries
ifeq ($(PLATFORM), Darwin)
	ifeq ($(ENABLE_FAT), true)
		CFLAGS:=$(CFLAGS) -isysroot $(SYSTEM_ROOT) -arch ppc -arch i386
	endif
endif

CXXFLAGS=${CFLAGS}

